/**
 * @author sunxinqi
 * 
 *         当你使用由Executors类的
 *         newCachedThreadPool()方法创建的基本ThreadPoolExecutor，你会有执行者运行在某一时刻的线程数的问题。
 *         这个执行者为每个接收到的任务创建一个线程（如果池中没有空闲的线程），所以，如果你提交大量的任务，并且它们有很长的（执行）时间，
 *         你会使系统过载和引发应用程序性能不佳的问题。
 * 
 *         如果你想要避免这个问题，Executors类提供一个方法来创建大小固定的线程执行者。这个执行者有最大线程数。
 *         如果你提交超过这个最大线程数的任务，这个执行者将不会创建额外的线程，并且剩下的任务将会阻塞，直到执行者有空闲线程。这种行为，
 *         保证执行者不会引发应用程序性能不佳的问题。
 * 
 *         在这个指南中，你将继续学习怎样创建一个大小固定的线程执行者，然后修改本章第一个示例的实现。
 *
 */
package com.akcomejf.java.executor.fixpool;